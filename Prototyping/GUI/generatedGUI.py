# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'gui.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

#https://stackoverflow.com/questions/57891219/how-to-make-a-fast-matplotlib-live-plot-in-a-pyqt5-gui
#adding matplotlib to the GUI


from PyQt5 import QtCore, QtGui, QtWidgets
import pyqtgraph as pg
from pyqtgraph import PlotWidget, plot
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas
import matplotlib.pyplot as mpl
import numpy as np


class Ui_MainWindow(object):

    def __init__(self):
        self.conn = False
        self.hour = [1,2,3,4,5,6,7,8,9,10]
        self.temperature = [30,32,34,32,33,31,29,32,35,45]

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 594)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(10, 10, 131, 51))
        self.label.setAutoFillBackground(True)
        self.label.setObjectName("label")

        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(10, 90, 93, 61))
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.clicked)

        self.plot = pg.PlotWidget(self.centralwidget)
        self.plot.setGeometry(QtCore.QRect(450, 500, 300, 300))
        n = 300
        self.scatter = pg.ScatterPlotItem(
            size=10, brush=pg.mkBrush(255, 255, 255, 120))
        pos = np.random.normal(size=(2, n), scale=1e-5)
        spots = [{'pos': pos[:, i], 'data': 1}
                 for i in range(n)] + [{'pos': [0, 0], 'data': 1}]
        self.scatter.addPoints(spots)
        self.plot.addItem(self.scatter)

        self.graphWidget = pg.PlotWidget(self.centralwidget)
        self.graphWidget.setGeometry(QtCore.QRect(200, 50, 131, 51))
        self.graphWidget.setBackground('w')
        self.graphWidget.plot(self.hour, self.temperature)

        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "Connection Status"))
        self.pushButton.setText(_translate("MainWindow", "PushButton"))

    def clicked(self):
        if self.conn == False:
            self.conn = True
            self.label.setStyleSheet("background-color: green; border: 1px solid black;")
            self.hour = [1,2,3,4,5,6,7,8,9,10]
            self.temperature = [15,25,25,23,85,25,63,20,44,10]
            self.graphWidget.clear()
            self.graphWidget.plot(self.hour, self.temperature)
        elif self.conn == True:
            self.conn = False
            self.label.setStyleSheet("background-color: red; border: 1px solid black;")
            self.hour = [1,2,3,4,5,6,7,8,9,10]
            self.temperature = [30,32,34,32,33,31,29,32,35,45]
            self.graphWidget.clear()
            self.graphWidget.plot(self.hour, self.temperature)

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
